jmp метка       (jump)
jmp *операнд

jxx    метка
(jge, jl, ja)

   movq $0, %rax
   jmp .L1
   movq (%rax), %rax
.L1:
   popq %rdx

.globl func
__________________________________________________________________________________

jmp *%rax
jmp *(%rbx)
__________________________________________________________________________________

program counter relative
%rip

__________________________________________________________________________________

loop:
    movq %rdi, %rax
    jmp .L2
.L3:
    sarq %rax
.L2:
    testq %rax, %rax
    jg .L3
    ret
(странная версия цикла, выполняем пока %rax не ноль)
__________________________________________________________________________________

object code

0: ...
3: eb 03    jmp 8
5:
8:
b: 7f f8    jg 5
d: ...

60f:
612: eb 93
614
617:
61a: 7f f8
61c:

__________________________________________________________________________________
jxx работает начиная со следующего разряда
__________________________________________________________________________________

Ветвление и циклы

if (test_expr)
    body
else
    then_body

cmp
test
jmp
jxx

.L1:
    label
__________________________________________________________________________________

cmovxx S, R

__________________________________________________________________________________

v = test_expr ? then_expr : else_expr;

<=>

if (!test_expr)         |   v = then-xpr;
    goto false;         |   ve = else-expr;
    v = then_expr;      |   t = test-expr;
    goto done;          |   if(!t) v = ve;
false:                  |
    v = else_expr;      |
done:                   |

__________________________________________________________________________________

циклы

__________________________________________________________________________________


    movl $0
    jmp .L1
.L3:
    leaq (%rdi, %rsi), %rdx
    addq %rdx, %rax
    subq $1, %rdi
.L2:
    cmpq %rsi, %rsi
    jg .L3
    ret

__________________________________________________________________________________

do
    body
while (test_expr);

__________________________________________________________________________________

while (test__expr)
    body
"переход-в-середину"

__________________________________________________________________________________

guarded_do

t = test_expr;
if (!t)
    goto done;
do
    body
while(test_expr);

-mabi=sysv