В ассемблерном коде часто можно встретить инструкции, такие как

    xorq %rdx,%rdx

причем в коде на C операции ИСКЛЮЧАЮЩЕЕ ИЛИ отсутствуют.

1. Объясните действие этой конкретной инструкции ИСКЛЮЧАЮЩЕЕ ИЛИ и
какую полезную операцию она реализует.
2. Есть ли более простой способ выразить эту операцию на языке
ассемблера?
3. Сравните количество байтов, необходимых для кодирования
этих двух разных реализаций одной и той же операции.

__________________________________________________________________

1. Эта инструкция обнуляет регистр %rdx, используя свойство x ^ x = 0 для любого x.
Она соответствует выражению на C: x = 0.

2. Более прямолинейный способ обнуления регистра %rdx – использовать инструкцию movq $0, %rdx.

3. Однако инструкция xorq занимает всего 3 байта,
а инструкция movq – 7. Другие способы обнуления %rdx основаны на свойстве всех инструкций,
изменяющих младшие 4 байта, обнулять старшие байты. То есть также можно использовать xorl
%edx, % edx (2 байта) или movl $0, %edx (5 байт).