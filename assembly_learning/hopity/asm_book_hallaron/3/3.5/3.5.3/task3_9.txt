long shift_left4_rightn(long x, long n)
{
    x <<= 4;
    x >>= n;
    return x;
}

Следующий код – это фрагмент на языке ассемблера, который выполняет
сдвиг и оставляет результат в регистре %rах.

Здесь опущены две ключевые инструкции. Параметры x и n
хранятся в регистрах %rdi и %rsi соответственно.

    long shift_left4_rightn(long x, long n)
    x в %rdi, n в %rsi
shift_left4_rightn:
    movq %rdi, %rax Получает x
    _________________ x <<= 4
    movl %esi, %ecx Получает n (4 байта)
    _________________ x >>= n

Вставьте недостающие инструкции, соответствующие комментариям справа.
Сдвиг вправо выполняется арифметически.

__________________________________________________________________

x <-> %rdi, n <-> %rsi

shift_left4_rightn:
    movq %rdi, %rax     Получает x
    salq $4, %rax       (x <<= 4)
    movl %esi, %ecx     Получает n (4 байта)
    sarq %cl, %rax      (x >>= n)