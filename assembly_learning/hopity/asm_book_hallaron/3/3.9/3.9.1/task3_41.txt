Взгляните на следующее объявление структуры:

struct prob
{
    int *p;
    struct
    {
        int x;
        int y;
    } s;
    struct prob *next;
};

Это объявление показывает, что одна структура может быть встроена в другую, подобно
тому, как массивы могут встраиваться в структуры и в другие массивы.
Следующая процедура (некоторые выражения опущены) выполняет некоторые действия
с этой структурой:

void sp_init(struct prob *sp)
{
    sp->s.x =   ________;
    sp->p =     ________;
    sp->next =  ________;
}

1. Определите смещения в байтах следующих полей:
    p:     ________
    s.x:   ________
    s.y:   ________
    next:  ________

2. Сколько байтов занимает эта структура в памяти?
3. Для sp_init компилятор сгенерировал следующий ассемблерный код:

    void sp_init(struct prob *sp)
    sp в %rdi
sp_init:
    movl 12(%rdi), %eax     # tmp = sp->y;
    movl %eax, 8(%rdi)      # sp->x = tmp;
    leaq 8(%rdi), %rax      # tmp = &sp->x;
    movq %rax, (%rdi)       # sp->p = tmp;
    movq %rdi, 16(%rdi)     # sp->next = sp;
    ret

Опираясь на этот код, восстановите отсутствующие выражения в исходном коде sp_init.

___________________________________________________________________________________________

1. Определите смещения в байтах следующих полей:
    p:     0
    s.x:   8
    s.y:   12
    next:  16

2.  24 байт

3.

void sp_init(struct prob *sp)
{
    sp->s.x =   sp->s.y;
    sp->p =     &sp->s.x;
    sp->next =  sp;
}